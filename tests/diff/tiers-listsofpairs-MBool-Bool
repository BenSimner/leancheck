tiers :: [Maybe Bool->Bool]  =
  [ [ \x -> case x of
              Nothing -> False
              Just False -> False
              Just True -> False
    , \x -> case x of
              Nothing -> True
              Just False -> True
              Just True -> True
    ]
  , [ \x -> case x of
              Nothing -> True
              Just False -> False
              Just True -> False
    , \x -> case x of
              Nothing -> False
              Just False -> True
              Just True -> True
    ]
  , [ \x -> case x of
              Nothing -> False
              Just False -> True
              Just True -> False
    , \x -> case x of
              Nothing -> False
              Just False -> False
              Just True -> True
    , \x -> case x of
              Nothing -> True
              Just False -> False
              Just True -> True
    , \x -> case x of
              Nothing -> True
              Just False -> True
              Just True -> False
    ]
  , [ \x -> case x of
              Nothing -> True
              Just False -> True
              Just True -> False
    , \x -> case x of
              Nothing -> True
              Just False -> False
              Just True -> True
    , \x -> case x of
              Nothing -> False
              Just False -> False
              Just True -> True
    , \x -> case x of
              Nothing -> False
              Just False -> True
              Just True -> False
    ]
  , [ \x -> case x of
              Nothing -> False
              Just False -> True
              Just True -> True
    , \x -> case x of
              Nothing -> True
              Just False -> False
              Just True -> False
    ]
  ]

map length (tiers :: [[ Maybe Bool->Bool ]])  =  [2,2,4,4,2]

length (list :: [ Maybe Bool->Bool ])  =  Infinity
